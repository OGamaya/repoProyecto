//Ejecucion
dosPanoramas();
panoramaMayor();
caminoEntrePanoramas();

//1.5 En el tour existen por lo menos dos panoramas
operation dosPanoramas()
{
  "1.5 En el tour existen por lo menos dos panoramas".println();
  if (existenDosPanoramas())
  {
   "Existen 2 o mas panoramas en el tour.".println();
  }
  else
  {
   "No Existe 2 o mas panoramas en el tour.".println();
  }
}

operation existenDosPanoramas():Boolean
{
   var existeDosPanoramas:Boolean=Tour.allInstances.forAll(t|t.panorama.size()>=2); 
   return existeDosPanoramas;
}

//1.6 Existe un camino entre todos los panoramas de un tour
operation caminoEntrePanoramas () 
{ 
  var panoramas = Panorama.allInstances.select(p|p.hotspot.size()>0);  
  var rutaPanorama: String;
  "1.6 Existe un camino entre todos los panoramas de un tour".println();
  for (p in panoramas)
  {
      for (h in p.hotspot )
      {
        rutaPanorama="Panorama: "+p.nombre+" -> Hotspot: "+h.nombre+" -> Panorama: "+h.dirige.nombre;
        rutaPanorama.println();   
      }
  }
}

//1.7 Cuál es el panorama que tiene más hotspots
operation panoramaMayor()
{
   "1.7 Cuál es el panorama que tiene más hotspots".println();
   panoramaConMasHostpot().nombre.println();
}

operation panoramaConMasHostpot():Panorama
{
  var panorama : Panorama = new Panorama;
  panorama=Panorama.allInstances.sortBy(p|p.hotspot.size()).last();
  return panorama;
}